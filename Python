Python code for visualization:

-- Python Code to plot a Bar graph between the event count from each university:

import pymysql import pandas AS pd import matplotlib.pyplot AS plt import seaborn AS sns host = 'localhost' user = 'root' password = 'Sribala22*' database = 'univents' connection = pymysql.connect(host=host, user=user, password=password, database=database) cursor = connection.cursor() query = """SELECT v.University, COUNT(DISTINCT e.EventID) AS EventCount FROM event e JOIN venue v ON e.VenueID = v.VenueID GROUP BY v.University; """ cursor.execute(query) result = cursor.fetchall() university_events = pd.DataFrame(result, columns=['University', 'EventCount']) colors = sns.color_palette("Blues_d", n_colors=len(university_events)) # Darker Blue plt.figure(figsize=(12, 6)) plt.rcParams['axes.facecolor'] = '#f0f0f0' # Light Grey ax = sns.barplot(x='EventCount', y='University', data=university_events, palette=colors) for p IN ax.patches: ax.annotate(f'{p.get_width():.0f}', (p.get_width() + 0.2, p.get_y() + p.get_height() / 2), ha='left', va='center') plt.title('University-wise Event Count') plt.xlabel('Event Count') plt.ylabel('University') plt.grid(False) plt.tight_layout() plt.show() cursor.close() connection.close()

-- Python Code to find user type distribution in different universities:

import pymysql import pandas AS pd import matplotlib.pyplot AS plt import seaborn AS sns host = 'localhost' user = 'root' password = 'Sribala22*' database = 'univents' connection = pymysql.connect(host=host, user=user, password=password, database=database) cursor = connection.cursor() query = """SELECT University, User_Type, COUNT(UserID) AS UserCount FROM userdetailswitheventcount GROUP BY University, User_Type; """ cursor.execute(query) result = cursor.fetchall() user_type_distribution = pd.DataFrame(result, columns=['University', 'User_Type', 'UserCount']) plt.figure(figsize=(16, 8)) ax = sns.barplot(x='University', y='UserCount', hue='User_Type', data=user_type_distribution) plt.title('User Type Distribution for Different Universities') plt.xlabel('University') plt.ylabel('User Count') plt.legend(title='User Type') for p IN ax.patches: ax.annotate(f'{int(p.get_height())}', (p.get_x() + p.get_width() / 2., p.get_height()), ha='center', va='center', xytext=(0, 10), textcoords='offset points') plt.xticks(rotation=45, ha='right') plt.show() cursor.close() connection.close()

-- Python Code to plot a line chart for monthly event count in the year 2024 import pymysql import pandas AS pd import matplotlib.pyplot AS plt import calendar host = 'localhost' user = 'root' password = 'Sribala22*' database = 'univents' connection = pymysql.connect(host=host, user=user, password=password, database=database) sql_query = """SELECT DATE_FORMAT(e.Date, '%Y-%m') AS Month, COUNT(e.EventID) AS EventCount FROM event e WHERE YEAR(e.Date) = 2024 GROUP BY Month ORDER BY Month; """ df = pd.read_sql(sql_query, connection) df['Month'] = pd.to_datetime(df['Month']) df['Month'] = df['Month'].dt.month.map(lambda x: calendar.month_abbr[x]) plt.figure(figsize=(12, 6)) plt.plot(df['Month'], df['EventCount'], marker='o', markersize=10, linestyle='-', color='b') plt.title('Monthly Event Count in 2024') plt.xlabel('Month') plt.ylabel('Number of Events') plt.xticks(rotation=45, ha='right') # Rotate x-axis labels for better readability plt.grid(True) plt.tight_layout() plt.show() connection.close()
